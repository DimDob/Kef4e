import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'java'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://repo.maven.apache.org/maven2"
    }
}

java {
    sourceCompatibility = '17'
}

dependencies {
    implementation 'org.springframework.amqp:spring-rabbit:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.0.4'
    implementation 'org.hibernate.orm:hibernate-core:6.2.1.Final'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    implementation "org.apache.avro:avro:1.11.0"
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("schemas/messaging/avro")
    outputDir = file("./build/generated/avro")
    outputDir = file("Engine/build/generated/avro")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

sourceSets {
    main {
        java {
            srcDirs += 'Engine/build/generated/avro'
        }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
